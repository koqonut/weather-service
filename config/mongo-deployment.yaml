apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-server
  labels:
    app: mongo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-app
  template:
  #template is the blueprint for pods to be created
    metadata:
      labels:
        app: mongo-app
      name: mongo-service
    spec:
      containers:
      - name: mongo-app
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongoweatherdb-secret
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: mongoweatherdb-secret
              key: mongo-root-password
        volumeMounts:
          - name: mongo-app-persistent-storage
            mountPath: /data/db
      volumes:
      - name: mongo-app-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-app-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo-app
  name: mongo-service
spec:
  selector:
  # corresponds to pod label deployment
    app: mongo-app
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  clusterIP: None # we use DNS, so clusterIP is irrelevent

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-app-pv-claim # name of PVC essential foe identifying the storage data
  labels: 
    app: mongo-app
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi

